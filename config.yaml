general:
  # Data source settings in pystepsrc configuration file
  data_source: "opera_meteo_france"

  # Date, time, and its format from which to begin forecast
  datetime_fmt: "%Y%m%d%H%M"
  # If multiple datetimes given, splits into multiple configs
  datetime:
    - 202301182300
    # - 202301190100
    # - 202301022300
    # - 202212222300
    # - 202201060100
    # - 202105181000
    # - 202105171500
    # - 202303030800
    # - 202205302300
    # - 202105230400
    # - 202106231300
    # - 202108171400
    # - 202207121500
    # - 202106250100
    # - 202108111400
    # - 202109122000
    # - 202109130500
    # - 202110151800
    # - 202210290900
    # - 202211080900

  # Number of forecast timesteps
  n_leadtimes: 1

  # Clip domain to coordinates (local)
  # To use whole domain, first entry should be null
  domain_box:
    # - 2.284e6  # REG2
    # - 2.622e6
    # - -1.955e6
    # - -1.664e6
    - 2.6e6 # REG1
    - 3.009e6
    - -1.719e6
    - -1.481e6

  # Precipitation thresholds to use for ensemble metrics and plots
  thresholds:
    - 0.1
    - 0.5

  fss_scales:
    - 2
    - 8
    - 20

  # Export results to NetCDF format (./results/netcdf)
  export: false

model:
  # Default model optional parameter values (can be overwritten in code)
  steps:
    manual:
      # https://pysteps.readthedocs.io/en/latest/generated/pysteps.nowcasts.steps.forecast.html
      # Number of ensemble members
      n_ens_members: 24
      n_cascade_levels: 6
      precip_thr: null
      kmperpixel: null
      timestep: null
      extrap_method: "semilagrangian"
      decomp_method: "fft"
      bandpass_filter_method: "gaussian"
      noise_method: "nonparametric"
      noise_stddev_adj: null
      ar_order: 2
      vel_pert_method: "bps"
      conditional: false
      probmatching_method: "cdf"
      mask_method: "incremental"
      seed: null
      num_workers: 1
      fft_method: "numpy"
      domain: "spatial"
      extrap_kwargs: null
      filter_kwargs: null
      noise_kwargs: null
      vel_pert_kwargs: null
      mask_kwargs: null
      measure_time: false
      callback: null
      return_output: true
    metadata:
      # Model parameters that can (and should) be automatically read from the metadata
      # Value in this list is the metadata key
      # Overwrites default values in manual
      precip_thr: threshold
      kmperpixel: xpixelsize
      timestep: accutime
  anvil:
    # https://pysteps.readthedocs.io/en/latest/generated/pysteps.nowcasts.anvil.forecast.html
    manual:
      rainrate: null
      n_cascade_levels: 8
      extrap_method: semilagrangian
      ar_order: 2
      ar_window_radius: 50
      r_vil_window_radius: 3
      fft_method: numpy
      apply_rainrate_mask: true
      num_workers: 1
      extrap_kwargs: null
      filter_kwargs: null
      measure_time: false # own measurement exists
  linda:
    # https://pysteps.readthedocs.io/en/latest/generated/pysteps.nowcasts.linda.forecast.html
    manual:
      feature_method: blob
      max_num_features: 25
      feature_kwargs: null
      ari_order: 1
      kernel_type: anisotropic
      localization_window_radius: null
      errdist_window_radius: null
      acf_window_radius: null
      extrap_method: semilagrangian
      extrap_kwargs: null
      add_perturbations: True
      pert_thrs:
        - 0.5
        - 1.0
      n_ens_members: 10
      vel_pert_method: bps
      vel_pert_kwargs: null
      kmperpixel: null
      timestep: null
      seed: null
      num_workers: 1
      use_multiprocessing: False
      measure_time: False
      callback: null
      return_output: True
    metadata:
      # Model parameters that can be automatically read from the metadata
      # Value in this list is the metadata key
      # Overwrites default values in manual
      kmperpixel: xpixelsize
      timestep: accutime
  sseps:
    manual:
      n_ens_members: 24
      n_cascade_levels: 6
      win_size: 256
      overlap: 0.1
      war_thr: 0.1
      extrap_method: semilagrangian
      decomp_method: fft
      bandpass_filter_method: gaussian
      noise_method: ssft
      ar_order: 2
      vel_pert_method: null
      probmatching_method: cdf
      mask_method: incremental
      callback: null
      fft_method: numpy
      return_output: True
      seed: null
      num_workers: 1
      extrap_kwargs: null
      filter_kwargs: null
      noise_kwargs: null
      vel_pert_kwargs: null
      mask_kwargs: null
      measure_time: False

batch:
  steps:
    n_ens_members:
      - 20
      - 22
      - 24
      - 26
      - 28
    n_cascade_levels:
      - 4
      - 6
      - 8
    bandpass_filter_method:
      - gaussian
      - uniform
    noise_method:
      - parametric
      - nonparametric
      - ssft
      - nested
    noise_stddev_adj:
      - auto
      - fixed
      - null
    # ar_order:
    #   - 1
    #   - 2
    vel_pert_method:
      - bps
      - null
    conditional:
      - true
      - false
    mask_method:
      - obs
      - sprog
      - incremental
    probmatching_method:
      - cdf
      - mean
    domain:
      - spatial
      - spectral
  anvil:
    n_cascade_levels:
      - 4
      - 6
      - 8
      - 10
    ar_window_radius:
      - 25
      - 50
      - 75
    r_vil_window_radius:
      - 1
      - 2
      - 3
      - 4
      - 5
  linda:
    n_ens_members:
      - 20
      - 24
      - 28
      - 32
      - 36
      - 40
      - 44
      - 48
      - 52
  sseps:
    n_ens_members:
      - 20
      - 22
      - 24
      - 26
      - 28
    n_cascade_levels:
      - 4
      - 6
      - 8
    win_size:
      - 128
      - 256
      - 512
    overlap:
      - 0.05
      - 0.1
      - 0.15
      - 0.20
    war_thr:
      - 0.05
      - 0.1
      - 0.15
    bandpass_filter_method:
      - gaussian
      - uniform
    noise_method:
      - parametric
      - nonparametric
      - ssft
      - nested
    # ar_order:
    #   - 1
    #   - 2
    vel_pert_method:
      - bps
      - null
    mask_method:
      - obs
      - sprog
      - incremental
    probmatching_method:
      - cdf
      - mean

metrics:
  # Calculate Fraction Skill Score (FSS) by default for all threshold and scale values
  # These metrics are extra
  # https://pysteps.readthedocs.io/en/latest/generated/pysteps.verification.detcontscores.det_cont_fct.html#pysteps.verification.detcontscores.det_cont_fct
  deterministic:
    - MAE # Mean Absolute Error
    - rmse # Root Mean Squared Error
    - RV # Reduction of Variance (Brier Score)
  # https://pysteps.readthedocs.io/en/latest/generated/pysteps.verification.interface.get_method.html#pysteps.verification.interface.get_method
  ensemble:
    mean:
      - CSI # Critical Success Index
      - MAE # Mean Absolute Error
      - RMSE # Root Mean Squared Error
      - RV # Reduction of Variance (Brier Score)
